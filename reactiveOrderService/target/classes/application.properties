spring.application.name=order-service
springdoc.swagger-ui.path=/swagger-ui/index.html
# Dev: verbose with method & line numbers, colored
logging.pattern.console=${LOGPATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%class.%M:%L) - %msg%n}


# Prod: leaner, colored but no method/line
# logging.pattern.console = ${LOGPATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n}

spring.r2dbc.url=r2dbc:mysql://localhost:3306/amit?serverTimezone=Asia/Kolkata
spring.r2dbc.username=root
spring.r2dbc.password=shamit2020


# ==========================
# Kafka Client Config
# ==========================

# Kafka bootstrap servers (remote brokers)
spring.kafka.bootstrap-servers=192.168.0.143:9092,192.168.0.143:9093,192.168.0.143:9094

# Producer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.batch-size=16384
spring.kafka.producer.linger-ms=10
spring.kafka.producer.buffer-memory=33554432
# You are using custom JSON serialization (Option 2 with Jackson + ByteArraySerializer), so you don't need spring.kafka.producer.value-serializer

# Consumer
spring.kafka.consumer.group-id=order-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
# Same here: you are handling custom deserialization, so no spring.kafka.consumer.value-deserializer


# Topics
app.kafka.topic.order=order.events
app.kafka.topic.order.dlt=order.events.dlt
app.kafka.topic.order.retry=order.events.retry
app.kafka.topic.order.proto=order.events.proto
app.kafka.retry.max-attempts=3
app.kafka.outbox.poll-interval=PT1S
app.kafka.outbox.batch-size=50
app.kafka.outbox.max-attempts=5
app.kafka.schema-registry-url=http://localhost:8081


# ==========================
# Actuator
# ==========================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
