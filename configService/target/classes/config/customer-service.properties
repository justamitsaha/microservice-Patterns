spring.application.name=customer-service
server.port=8081

logging.pattern.console=${LOGPATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%class.%M:%L) - %msg%n}

spring.r2dbc.url=r2dbc:mysql://localhost:3306/amit?serverTimezone=Asia/Kolkata
spring.r2dbc.username=root
spring.r2dbc.password=shamit2020

# Prefer discovery base URL (load-balanced)
app.order-service.base-url=http://order-service

management.endpoints.web.exposure.include=health,info,metrics,prometheus
spring.kafka.bootstrap-servers=192.168.0.143:9092,192.168.0.143:9093,192.168.0.143:9094
management.tracing.sampling.probability=1.0
management.otlp.tracing.endpoint=http://localhost:4318/v1/traces
management.metrics.distribution.percentiles.http.server.requests=0.5,0.9,0.95,0.99
management.metrics.distribution.slo.http.server.requests=100ms,250ms,500ms,1s,2s

# Resilience4j config for order service calls
resilience4j.circuitbreaker.instances.orderService.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.orderService.slidingWindowSize=10
resilience4j.circuitbreaker.instances.orderService.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.orderService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.orderService.waitDurationInOpenState=10s

resilience4j.retry.instances.orderService.maxAttempts=3
resilience4j.retry.instances.orderService.waitDuration=200ms
resilience4j.retry.instances.orderService.retryExceptions=java.io.IOException,org.springframework.web.reactive.function.client.WebClientRequestException,org.springframework.web.reactive.function.client.WebClientResponseException

resilience4j.bulkhead.instances.orderService.maxConcurrentCalls=20
resilience4j.bulkhead.instances.orderService.maxWaitDuration=200ms
resilience4j.timelimiter.instances.orderService.timeoutDuration=2s
resilience4j.timelimiter.instances.orderService.cancelRunningFuture=false

eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.prefer-ip-address=true
