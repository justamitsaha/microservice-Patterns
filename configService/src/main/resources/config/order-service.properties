spring.application.name=order-service
springdoc.swagger-ui.path=/swagger-ui/index.html
logging.pattern.console=${LOGPATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%class.%M:%L) - %msg%n}

spring.r2dbc.url=r2dbc:mysql://localhost:3306/amit?serverTimezone=Asia/Kolkata
spring.r2dbc.username=root
spring.r2dbc.password=shamit2020

spring.kafka.bootstrap-servers=192.168.0.143:9092,192.168.0.143:9093,192.168.0.143:9094
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.batch-size=16384
spring.kafka.producer.linger-ms=10
spring.kafka.producer.buffer-memory=33554432

spring.kafka.consumer.group-id=order-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false

app.kafka.topic.order=order.events
app.kafka.topic.order.dlt=order.events.dlt
app.kafka.topic.order.retry=order.events.retry
app.kafka.topic.order.proto=order.events.proto
app.kafka.retry.max-attempts=3
app.kafka.outbox.poll-interval=PT1S
app.kafka.outbox.batch-size=50
app.kafka.outbox.max-attempts=5
app.kafka.schema-registry-url=http://localhost:8081

management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.tracing.sampling.probability=1.0
management.otlp.tracing.endpoint=http://localhost:4318/v1/traces
management.metrics.distribution.percentiles.http.server.requests=0.5,0.9,0.95,0.99
management.metrics.distribution.slo.http.server.requests=100ms,250ms,500ms,1s,2s

eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.prefer-ip-address=true
